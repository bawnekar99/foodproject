# Generated by Django 3.1.12 on 2025-06-23 12:59

import bson.objectid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import djongo.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', djongo.models.fields.ObjectIdField(auto_created=True, default=bson.objectid.ObjectId, editable=False, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('phone', models.CharField(max_length=15, unique=True)),
                ('is_delivery_boy', models.BooleanField(default=False)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('is_vendor', models.BooleanField(default=False)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='user_profiles/')),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users_user',
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, default=bson.objectid.ObjectId, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('restaurant_type', models.CharField(choices=[('movable', 'Movable (Food Truck/Cart)'), ('non_movable', 'Non-Movable (Fixed Location)'), ('restaurant', 'Traditional Restaurant')], default='restaurant', max_length=20)),
                ('category', models.CharField(max_length=100)),
                ('food_categories', models.CharField(max_length=500)),
                ('cuisine_types', djongo.models.fields.JSONField(blank=True, default=list)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='restaurant_logos/')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='restaurant_covers/')),
                ('gallery_images', djongo.models.fields.JSONField(blank=True, default=list)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('latitude', models.DecimalField(decimal_places=6, default=Decimal('0.000000'), max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, default=Decimal('0.000000'), max_digits=9)),
                ('phone', models.CharField(max_length=15, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('delivery_available', models.BooleanField(default=True)),
                ('delivery_type', models.CharField(choices=[('self', 'Self Delivery'), ('platform', 'Platform Delivery'), ('both', 'Both'), ('pickup_only', 'Pickup Only')], default='platform', max_length=20)),
                ('pickup_available', models.BooleanField(default=True)),
                ('delivery_radius', models.PositiveIntegerField(default=5, help_text='Delivery radius in KM')),
                ('min_delivery_time', models.PositiveIntegerField(default=30, help_text='Minimum delivery time in minutes')),
                ('max_delivery_time', models.PositiveIntegerField(default=60, help_text='Maximum delivery time in minutes')),
                ('min_order_amount', models.FloatField(default=0.0)),
                ('delivery_fee', models.FloatField(default=0.0)),
                ('packaging_fee', models.FloatField(default=0.0)),
                ('opening_time', models.TimeField(blank=True, null=True)),
                ('closing_time', models.TimeField(blank=True, null=True)),
                ('is_24_hours', models.BooleanField(default=False)),
                ('weekly_off', djongo.models.fields.JSONField(blank=True, default=list)),
                ('average_rating', models.FloatField(default=0.0)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('gst_number', models.CharField(blank=True, max_length=15, null=True)),
                ('fssai_license', models.CharField(blank=True, max_length=14, null=True)),
                ('business_license', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('closed', 'Temporarily Closed'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_promoted', models.BooleanField(default=False)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('otp_created_at', models.DateTimeField(blank=True, null=True)),
                ('accepts_cash', models.BooleanField(default=True)),
                ('accepts_card', models.BooleanField(default=True)),
                ('accepts_upi', models.BooleanField(default=True)),
                ('has_parking', models.BooleanField(default=False)),
                ('has_wifi', models.BooleanField(default=False)),
                ('has_ac', models.BooleanField(default=False)),
                ('total_orders', models.PositiveIntegerField(default=0)),
                ('total_revenue', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RestaurantImage',
            fields=[
                ('id', djongo.models.fields.ObjectIdField(auto_created=True, default=bson.objectid.ObjectId, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='restaurant_images/')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='users.restaurant')),
            ],
        ),
        migrations.AddIndex(
            model_name='restaurant',
            index=models.Index(fields=['city', 'status'], name='users_resta_city_0dcb88_idx'),
        ),
        migrations.AddIndex(
            model_name='restaurant',
            index=models.Index(fields=['restaurant_type'], name='users_resta_restaur_a9e511_idx'),
        ),
        migrations.AddIndex(
            model_name='restaurant',
            index=models.Index(fields=['delivery_available'], name='users_resta_deliver_735a4c_idx'),
        ),
        migrations.AddIndex(
            model_name='restaurant',
            index=models.Index(fields=['is_verified'], name='users_resta_is_veri_b97843_idx'),
        ),
    ]
